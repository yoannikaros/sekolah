rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
    }
    
    // Event planners collection with visibility-based access control
    match /event_planners/{eventId} {
      allow read: if request.auth != null && (
        // Public events can be read by anyone
        resource.data.visibility == 'public' ||
        // School events can be read by users from the same school
        (resource.data.visibility == 'school' && 
         request.auth.token.schoolId == resource.data.schoolId) ||
        // Internal class events can be read by users from the same class
        (resource.data.visibility == 'internalClass' && 
         request.auth.token.schoolId == resource.data.schoolId &&
         request.auth.token.classCode == resource.data.requiredClassCode)
      );
      
      allow write: if request.auth != null && (
        // Only admin users can create/update events
        request.auth.token.role == 'admin' ||
        // Allow voting updates for public events
        (resource.data.visibility == 'public' && 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['voters', 'votesCount', 'challengeAccepted']))
      );
    }
    
    // Event participants collection
    match /event_participants/{participantId} {
      allow read, write: if request.auth != null;
    }
    
    // Chat rooms collection
    match /chat_rooms/{roomId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // Messages collection
    match /messages/{messageId} {
      allow read, write: if request.auth != null;
    }
    
    // Schools collection
    match /schools/{schoolId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Class codes collection
    match /class_codes/{classId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Mading posts collection
    match /mading_posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && (
        // Allow post owner to update their posts
        request.auth.uid == resource.data.userId ||
        // Allow admin users to approve/moderate posts
        request.auth.token.role == 'admin' ||
        // Allow users to like/unlike posts (only updating likes field)
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'likesCount'])
      );
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        request.auth.token.role == 'admin'
      );
    }
    
    // Subjects collection
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Students collection
    match /students/{studentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == studentId ||
        request.auth.token.role == 'admin'
      );
    }
    
    // Teachers collection
    match /teachers/{teacherId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == teacherId ||
        request.auth.token.role == 'admin'
      );
    }
    
    // Admin users collection
    match /admin_users/{adminId} {
      allow read, write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // School accounts collection
    match /school_accounts/{accountId} {
      allow read, write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Default fallback for other collections
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}